version: '3.8'

services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - app-network

  celery-worker:
    build: .
    command: celery -A app.celery_worker:app worker --loglevel=info
    working_dir: /myapp
    volumes:
      - ./:/myapp/
    depends_on:
      - redis
      - kafka
      - postgres
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres/myappdb
      - CELERY_BROKER_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SMTP_SERVER=localhost
      - SMTP_PORT=25
      - SMTP_USERNAME=test
      - SMTP_PASSWORD=test
      - SERVER_BASE_URL=http://localhost
      - SEND_REAL_MAIL=false
      - JWT_SECRET_KEY=your_jwt_secret_key
    networks:
      - app-network

  fastapi:
    build: .
    command: ./start.sh
    working_dir: /myapp
    volumes:
      - ./:/myapp/
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@postgres/myappdb
      - CELERY_BROKER_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SMTP_SERVER=localhost
      - SMTP_PORT=25
      - SMTP_USERNAME=test
      - SMTP_PASSWORD=test
      - SERVER_BASE_URL=http://localhost
      - SEND_REAL_MAIL=false
      - JWT_SECRET_KEY=your_jwt_secret_key
    ports:
      - "8000:8000"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastapi
    networks:
      - app-network

volumes:
  postgres-data:
  pgadmin-data:

networks:
  app-network:
